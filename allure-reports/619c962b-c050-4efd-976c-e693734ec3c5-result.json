{"name": "test_formSubmission[getdata1]", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.WebDriverException: Message: no such execution context\n  (Session info: chrome=123.0.6312.122)\nStacktrace:\n\tGetHandleVerifier [0x00007FF71AF97032+63090]\n\t(No symbol) [0x00007FF71AF02C82]\n\t(No symbol) [0x00007FF71AD9EB1D]\n\t(No symbol) [0x00007FF71AD8C76D]\n\t(No symbol) [0x00007FF71AD8B100]\n\t(No symbol) [0x00007FF71AD8BA8F]\n\t(No symbol) [0x00007FF71AD9925A]\n\t(No symbol) [0x00007FF71ADAAB0E]\n\t(No symbol) [0x00007FF71ADAF82A]\n\t(No symbol) [0x00007FF71AD8C006]\n\t(No symbol) [0x00007FF71ADAA6A4]\n\t(No symbol) [0x00007FF71AE232ED]\n\t(No symbol) [0x00007FF71AE06D83]\n\t(No symbol) [0x00007FF71ADD83A8]\n\t(No symbol) [0x00007FF71ADD9441]\n\tGetHandleVerifier [0x00007FF71B3925AD+4238317]\n\tGetHandleVerifier [0x00007FF71B3CF70D+4488525]\n\tGetHandleVerifier [0x00007FF71B3C79EF+4456495]\n\tGetHandleVerifier [0x00007FF71B070576+953270]\n\t(No symbol) [0x00007FF71AF0E54F]\n\t(No symbol) [0x00007FF71AF09224]\n\t(No symbol) [0x00007FF71AF0935B]\n\t(No symbol) [0x00007FF71AEF9B94]\n\tBaseThreadInitThunk [0x00007FFA507A257D+29]\n\tRtlUserThreadStart [0x00007FFA5134AA58+40]", "trace": "request = <SubRequest 'setup' for <Function test_formSubmission[getdata1]>>\n\n    @pytest.fixture(scope='class')\n    def setup(request):\n        browser_name = request.config.getoption(\"--browser_name\")\n    \n        if browser_name == 'chrome':\n            driver = webdriver.Chrome()\n        elif browser_name == \"firefox\":\n            driver = webdriver.Firefox\n        elif browser_name == \"edge\":\n            driver = webdriver.Edge\n    \n        else:\n            print(\"Headless mode\")\n            chrome_options = webdriver.ChromeOptions()\n            chrome_options.add_argument(\"headless\")\n            driver = webdriver.Chrome(options=chrome_options)\n    \n>       driver.get(\"https://rahulshettyacademy.com/angularpractice/\")\n\ntest\\conftest.py:29: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n..\\..\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:353: in get\n    self.execute(Command.GET, {\"url\": url})\n..\\..\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:344: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x000002000A6DCC20>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"no such execution context\",\"message\":\"no such execution context\\\\n  (Sess...07FF71AEF9B94]\\\\n\\\\tBaseThreadInitThunk [0x00007FFA507A257D+29]\\\\n\\\\tRtlUserThreadStart [0x00007FFA5134AA58+40]\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.WebDriverException: Message: no such execution context\nE         (Session info: chrome=123.0.6312.122)\nE       Stacktrace:\nE       \tGetHandleVerifier [0x00007FF71AF97032+63090]\nE       \t(No symbol) [0x00007FF71AF02C82]\nE       \t(No symbol) [0x00007FF71AD9EB1D]\nE       \t(No symbol) [0x00007FF71AD8C76D]\nE       \t(No symbol) [0x00007FF71AD8B100]\nE       \t(No symbol) [0x00007FF71AD8BA8F]\nE       \t(No symbol) [0x00007FF71AD9925A]\nE       \t(No symbol) [0x00007FF71ADAAB0E]\nE       \t(No symbol) [0x00007FF71ADAF82A]\nE       \t(No symbol) [0x00007FF71AD8C006]\nE       \t(No symbol) [0x00007FF71ADAA6A4]\nE       \t(No symbol) [0x00007FF71AE232ED]\nE       \t(No symbol) [0x00007FF71AE06D83]\nE       \t(No symbol) [0x00007FF71ADD83A8]\nE       \t(No symbol) [0x00007FF71ADD9441]\nE       \tGetHandleVerifier [0x00007FF71B3925AD+4238317]\nE       \tGetHandleVerifier [0x00007FF71B3CF70D+4488525]\nE       \tGetHandleVerifier [0x00007FF71B3C79EF+4456495]\nE       \tGetHandleVerifier [0x00007FF71B070576+953270]\nE       \t(No symbol) [0x00007FF71AF0E54F]\nE       \t(No symbol) [0x00007FF71AF09224]\nE       \t(No symbol) [0x00007FF71AF0935B]\nE       \t(No symbol) [0x00007FF71AEF9B94]\nE       \tBaseThreadInitThunk [0x00007FFA507A257D+29]\nE       \tRtlUserThreadStart [0x00007FFA5134AA58+40]\n\n..\\..\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:229: WebDriverException"}, "parameters": [{"name": "getdata", "value": "{'name': 'Anshika', 'email': 'shetty@gmail.com', 'password': '6789'}"}], "start": 1713458293434, "stop": 1713458293434, "uuid": "4e96aa23-dcb1-4190-bdfc-91ca27d9765a", "historyId": "60c606a2e9be81154d77dc158381dbf4", "testCaseId": "66c854ed6d2d5ab1a3a43572893423ab", "fullName": "test.test_HomePage.TestHomePage#test_formSubmission", "labels": [{"name": "tag", "value": "@pytest.mark.usefixtures('setup')"}, {"name": "parentSuite", "value": "test"}, {"name": "suite", "value": "test_HomePage"}, {"name": "subSuite", "value": "TestHomePage"}, {"name": "host", "value": "Nik"}, {"name": "thread", "value": "25332-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test.test_HomePage"}]}